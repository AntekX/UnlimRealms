///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	UnlimRealms
//	Author: Anatole Kuzub
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "Sys/JobSystem.h"

namespace UnlimRealms
{

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Job
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
	
	Job::Job(JobSystem &jobSystem, Callback callback, DataPtr data) :
		jobSystem(jobSystem),
		callback(callback),
		data(data)
	{
		this->terminate = false;
		this->finished = false;
		this->progress = 0;
		this->resultCode = Undefined;
	}

	Job::~Job()
	{

	}

	void Job::Execute()
	{
		if (this->callback != ur_null)
		{
			this->callback(*this);
		}
		else
		{
			this->resultCode = InvalidArgs;
		}
		this->finished = true;
	}


	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// JobSystem
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	

	JobSystem::JobSystem(Realm &realm) :
		RealmEntity(realm)
	{

	}

	JobSystem::~JobSystem()
	{

	}

} // end namespace UnlimRealms